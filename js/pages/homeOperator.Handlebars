<style>
  td, h2 { text-transform: lowercase; }
  td:first-letter, h2:first-letter { text-transform: uppercase; }
  .card {
    padding: 70px 10px;
  }
  .row-centered { text-align:center; }
  .col-centered {
    float:none;
    text-align: center;
    color: white;
    background-color: #5A5A5A;
    padding: 20px;
    border: 1px solid #5A5A5A;
    border-radius:20px;
    margin-top: 20px;
  }
  .div-center {
    margin: 20px auto;
  }
  .btn-survey {
    transition: all 0.5s;
    color: #5A5A5A;
    background-color: white;
    border-color: #5A5A5A;
  }
  .btn span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
  }

  .btn span:after {
    content: '\00bb';
    position: absolute;
    opacity: 0;
    top: 0;
    right: -20px;
    transition: 0.5s;
  }

  .btn:hover span {
    padding-right: 25px;
  }

  .btn:hover span:after {
    opacity: 1;
    right: 0;
  }
</style>

<!-- Listing survey by region -->
<div id="list">
  <div class="block-header">
  <div class="row">
    <div class="col-lg-5 col-md-8 col-sm-12">
      <h2>Surveys</h2>
    </div>
    <div class="col-lg-7 col-md-4 col-sm-12 text-right">
      <ul class="breadcrumb justify-content-end">
        <li class="breadcrumb-item"><a href="index.html"><i class="icon-home"></i></a></li>
        <li class="breadcrumb-item">Surveys</li>
        <li class="breadcrumb-item active">List</li>
      </ul>
    </div>
  </div>
</div>
<div class="row clearfix">
  <div class="col-lg-12">
    <div class="card">
      <div class="row row-centered">
        <div class="col-md-3 col-centered offset-md-3" style="margin-right:20px;">
          <h2 id="NOS">{{{len surveys}}}</h2>
          <h6>Survey Available</h6>
        </div>
        <div class="col-md-3 col-centered">
          <h2>{{{survey.region_name}}}</h2>
          <h6>Assigned Region</h6>
        </div>
      </div>
      <div class="row row-centered">
        <div class="col-md-6 div-center">
          <button id="SS" class="btn btn-survey btn-block" onclick="survey('{{{survey.name}}}')"><span>Start Survey</span></button>
        </div>
      </div>
    </div>
  </div>
</div>
</div>
<script>
  $(document).ready(() => {
    $("table.datatable").dataTable();
  })

  const len = {{{ len surveys }}}
  if(!len) {
    $("#SS").prop("disabled", true);
  }

  async function loop(options) {
    return await new Promise(resolve => {
      var result;
      const interval = setInterval(() => {
        try {
          fetch(`{{url}}surveys/region`, options)
          .then(response => response.json())
          .then(data => {
            result = data;
          })
          .catch(error => console.log(error));
          var size = Object.keys(result).length;
          var random = Math.floor((Math.random() * Number(size-1)) + 1);
          if (size != $("#NOS").text()) {
            $("#NOS").replaceWith(`<h2 id="NOS">${size}</h2>`);
            $("#SS").attr("onclick",`survey(${result[random].name})`);
          }
        } catch (err) {
          resolve(err);
        }
      }, 3000);
    });
  }

  var options = {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Authorization: `bearer ${sessionStorage.getItem("token")}`
      }
  };
  var bar = loop(options);

  async function survey(name) {
    try {
      var surveys = {{{ json surveys }}}
      const surveyList = surveys.filter(survey => name == survey.name)
      sessionStorage.removeItem("targetedSurvey")
      sessionStorage.removeItem("phone")
      sessionStorage.setItem("targetedSurvey", JSON.stringify(surveyList))
      sessionStorage.setItem("phone", JSON.stringify(surveyList[0].phone))
      var profile = JSON.parse(sessionStorage.getItem("profile"))

      var id = surveyList[0].id;
      var formData = JSON.stringify({
        id: surveyList[0].id,
        gender: surveyList[0].gender,
        phone: surveyList[0].phone,
        race: surveyList[0].race,
        name:surveyList[0].name,
        address: surveyList[0].address,
        question_survey: null,
        comment: null,
        status_survey: null,
        call_duration: null,
        operator_id: profile.username,
        status_phone: null,
        status: 1
      });
      const updateStatus = await fetch(`{{url}}survey/${id}/edit`, {
        method: "post",
        headers: {
        credentials: 'include',
        Accept: "application/json",
        "Content-type": "application/json",
        Authorization: `bearer ${sessionStorage.getItem("token")}`
        },
        body: formData
      });

      const pending = await updateStatus.json();

      if (pending.status) {
        window.location.href = "index.html#survey";
      } else {
        Swal.fire({
          title: "Fail",
          text: "Fail update status",
          type: "error"
        });
      }
    } catch (err) { 
      console.log(err) }
  }

</script>